name: Deploy Development

on: pull_request

env:
  ENVIRONMENT: dev

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: npm version
      - run: npm ci
      - run: npm run build

  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - run: npm ci
      - run: npm run build
      - run: npm run lint:nofix
      - run: npm run test

  deploy:
    needs: [unit-test]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        customer: ["cuckoo"]
    steps:
      - uses: actions/checkout@v3
      - name: Wait for other deployments to finish...
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - run: npm ci
      - run: npm run package
      - run: npx cdk diff --context CUSTOMER=${{ matrix.customer }} --context ENVIRONMENT=${{ env.ENVIRONMENT }}
      - run: npx cdk deploy --context CUSTOMER=${{ matrix.customer }} --context ENVIRONMENT=${{ env.ENVIRONMENT }} --ci --require-approval=never --all

  integration-test:
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Wait for other integration tests to finish...
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v3
        with:
          node-version: "16"
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - run: npm ci
      - run: npm run test:integration:dev
